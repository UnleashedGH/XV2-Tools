<Controls:MetroWindow x:Class="EEPK_Organiser.Forms.EmmEditForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EEPK_Organiser.Forms"
        xmlns:utils="clr-namespace:EEPK_Organiser.Utils"
        xmlns:emm="clr-namespace:Xv2CoreLib.EMM;assembly=Xv2CoreLib"
        xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:undoRedo="clr-namespace:Xv2CoreLib.Resource.UndoRedo;assembly=Xv2CoreLib"
        mc:Ignorable="d"
        Title="Material Editor" MinHeight="400" MinWidth="600" Height="470" Width="800" ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterOwner">
    <Window.InputBindings>
        <KeyBinding Key="Z" Modifiers="Ctrl"  Command="{Binding Source={x:Static undoRedo:UndoManager.Instance}, Path=UndoCommand}"/>
        <KeyBinding Key="Y" Modifiers="Ctrl"  Command="{Binding Source={x:Static undoRedo:UndoManager.Instance}, Path=RedoCommand}"/>
    </Window.InputBindings>
    <Grid>
        <DataGrid x:Name="dataGrid" RowDetailsVisibilityMode="VisibleWhenSelected" SelectedItem="{Binding EmmFile.SelectedMaterial, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding EmmFile.ViewMaterials}" Margin="10,13,247.309,9.727" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" CanUserResizeRows="False" VirtualizingPanel.ScrollUnit="Pixel" SelectionMode="Extended" HorizontalScrollBarVisibility="Disabled">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="SteelBlue"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="SteelBlue"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>

                <!-- For aligning the arrow button to the top, instead of the centre -->
                <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
                <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
                    <Setter Property="Height" Value="8"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="SizeNS"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                                <Grid>
                                    <Themes1:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                        <StackPanel Orientation="Horizontal">
                                            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                            <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                                        </StackPanel>
                                    </Themes1:DataGridHeaderBorder>
                                    <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
                                    <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>

                <!-- First column is read-only. Editable via Right Click menu only (as it needs to be validated). -->
                <DataGridTemplateColumn Header="Name" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Str_00, UpdateSourceTrigger=PropertyChanged}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add Parameter" Click="ContextMenu_AddParameter_Click"/>
                                        <MenuItem Header="Rename" Click="ContextMenu_RenameMaterial_Click"/>
                                        <MenuItem IsEnabled="{Binding IsForContainer}" Header="Merge" Click="ContextMenu_Merge_Click"/>
                                        <MenuItem Header="Delete" Click="ContextMenu_Delete_Click"/>
                                        <MenuItem IsEnabled="{Binding IsForContainer}" Header="Used By?" Click="ContextMenu_UsedBy_Click"/>
                                        <Separator/>
                                        <MenuItem Header="Hue Adjustment" Click="ContextMenu_HueAdjustment_Click"/>
                                        <MenuItem Header="Hue Set" Click="ContextMenu_HueSet_Click"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Str_00, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Shader" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding UndoableShader, UpdateSourceTrigger=LostFocus}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding UndoableShader, UpdateSourceTrigger=LostFocus}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <DataGrid BorderBrush="{DynamicResource AccentColorBrush2}" BorderThickness="1" VirtualizingPanel.ScrollUnit="Pixel" EnableColumnVirtualization="True" EnableRowVirtualization="True" ItemsSource="{Binding Parameters}" CanUserResizeRows="False" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                        <DataGrid.Columns>
                            <!-- Dummy column used for easy selection only. -->
                            <DataGridTextColumn Width="15" IsReadOnly="True"/>

                            <DataGridTemplateColumn Header="Name" MinWidth="80" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding UndoableName, UpdateSourceTrigger=LostFocus}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding UndoableName, UpdateSourceTrigger=LostFocus}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Value Type" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding UndoableType, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Value" SelectedValuePath="Value" ItemsSource="{Binding Source={x:Static emm:EMM_File.EmmValueTypes}}" SelectionChanged="ValueType_SelectionChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding UndoableType, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Value" SelectedValuePath="Value" ItemsSource="{Binding Source={x:Static emm:EMM_File.EmmValueTypes}}" SelectionChanged="ValueType_SelectionChanged"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>

                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Value" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding value, UpdateSourceTrigger=PropertyChanged}" TextChanged="Value_TextChanged" LostFocus="Value_TextBox_LostFocus"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding value, UpdateSourceTrigger=PropertyChanged}" TextChanged="Value_TextChanged" LostFocus="Value_TextBox_LostFocus"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete" Click="ContextMenu_DeleteParameter_Click"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <Grid VerticalAlignment="Top">
                        <ToggleButton Width="12" Height="12"
                                IsChecked="{Binding DetailsVisibility, Converter={StaticResource visibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" BorderBrush="Transparent" Foreground="Transparent" Background="Transparent"
                                >
                            <Image Source="{StaticResource expand}"/>
                        </ToggleButton>
                    </Grid>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>

        </DataGrid>
        <GroupBox Header="Options" HorizontalAlignment="Right" Height="148" Margin="0,13,88.333,0" VerticalAlignment="Top" Width="145">
            <Grid>
                <Button Click="Options_AddMaterials_Click" Content="New Material" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="115"/>
                <Button IsEnabled="{Binding IsForContainer}" Click="Options_MergeDuplicates_Click" Content="Merge Duplicates" HorizontalAlignment="Left" Margin="11,42,0,0" VerticalAlignment="Top" Width="115"/>
                <Button IsEnabled="{Binding IsForContainer}" Click="Options_DeleteUnused_Click" Content="Delete Unused" HorizontalAlignment="Left" Margin="10,74,0,0" VerticalAlignment="Top" Width="115"/>

            </Grid>
        </GroupBox>
        <GroupBox Header="Search" HorizontalAlignment="Right" Height="102" Margin="0,173,10.333,0" VerticalAlignment="Top" Width="223">
            <Grid>
                <TextBox KeyDown="Filter_SearchBox_KeyDown" HorizontalAlignment="Left" Height="23" Margin="10,10,0,0" TextWrapping="Wrap" Text="{Binding EmmFile.MaterialSearchFilter, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="191"/>
                <Button Click="Filter_Search_Click" Content="Search" HorizontalAlignment="Left" Margin="29,38,0,0" VerticalAlignment="Top" Width="75"/>
                <Button Click="Filter_ClearSearch_Click" Content="Clear" HorizontalAlignment="Left" Margin="109,38,0,0" VerticalAlignment="Top" Width="75"/>

            </Grid>
        </GroupBox>
        <Label Content="{Binding MaterialCount}" HorizontalContentAlignment="Right" HorizontalAlignment="Right" Margin="0,0,10.309,9.727" VerticalAlignment="Bottom" Width="177" Height="30"/>

    </Grid>
</Controls:MetroWindow>
